{"ast":null,"code":"var _jsxFileName = \"/Users/goktugkoyun/Desktop/Projects/fetch/src/components/editor/EditorPanel.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useFile from '../../hooks/useFile';\nimport Editor from './Editor';\nimport ExplanationList from './ExplanationList';\nimport Breadcrumbs from './Breadcrumbs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditorPage() {\n  _s();\n  const {\n    '*': path,\n    owner,\n    repoName\n  } = useParams();\n  const {\n    file\n  } = useFile(owner, repoName, path);\n  const [selections, setSelections] = useState([]);\n  const editorRef = useRef(null);\n  const handleExplainRequest = _ref => {\n    let {\n      text,\n      line,\n      editor,\n      path\n    } = _ref;\n    if (!text.trim() || selections.find(e => e.line === line)) {\n      return;\n    }\n    editorRef.current = editor;\n    setSelections([...selections, {\n      text,\n      line,\n      path\n    }]);\n  };\n  const handleExplanationClose = selection => {\n    setSelections(selections.filter(sel => sel.line !== selection.line));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      path: path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onExplainRequest: handleExplainRequest,\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExplanationList, {\n      editorRef: editorRef,\n      selections: selections,\n      onExplanationClose: handleExplanationClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(EditorPage, \"u7wxdI1OVrDImTj38TyXOF7XvPg=\", false, function () {\n  return [useParams, useFile];\n});\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["useState","useRef","useParams","useFile","Editor","ExplanationList","Breadcrumbs","EditorPage","path","owner","repoName","file","selections","setSelections","editorRef","handleExplainRequest","text","line","editor","trim","find","e","current","handleExplanationClose","selection","filter","sel"],"sources":["/Users/goktugkoyun/Desktop/Projects/fetch/src/components/editor/EditorPanel.js"],"sourcesContent":["import { useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useFile from '../../hooks/useFile';\nimport Editor from './Editor';\nimport ExplanationList from './ExplanationList';\nimport Breadcrumbs from './Breadcrumbs';\n\nfunction EditorPage() {\n  const { '*': path, owner, repoName } = useParams();\n  const { file } = useFile(owner, repoName, path);\n  const [selections, setSelections] = useState([]);\n  const editorRef = useRef(null);\n\n  const handleExplainRequest = ({ text, line, editor, path }) => {\n    if (!text.trim() || selections.find((e) => e.line === line)) {\n      return;\n    }\n    editorRef.current = editor;\n    setSelections([...selections, { text, line, path }]);\n  };\n  const handleExplanationClose = (selection) => {\n    setSelections(selections.filter((sel) => sel.line !== selection.line));\n  };\n\n  return (\n    <div>\n      <Breadcrumbs path={path} />\n      <Editor onExplainRequest={handleExplainRequest} file={file} />\n      <ExplanationList\n        editorRef={editorRef}\n        selections={selections}\n        onExplanationClose={handleExplanationClose}\n      />\n    </div>\n  );\n}\n\nexport default EditorPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,SAASC,UAAU,GAAG;EAAA;EACpB,MAAM;IAAE,GAAG,EAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGR,SAAS,EAAE;EAClD,MAAM;IAAES;EAAK,CAAC,GAAGR,OAAO,CAACM,KAAK,EAAEC,QAAQ,EAAEF,IAAI,CAAC;EAC/C,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMc,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMc,oBAAoB,GAAG,QAAkC;IAAA,IAAjC;MAAEC,IAAI;MAAEC,IAAI;MAAEC,MAAM;MAAEV;IAAK,CAAC;IACxD,IAAI,CAACQ,IAAI,CAACG,IAAI,EAAE,IAAIP,UAAU,CAACQ,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACJ,IAAI,KAAKA,IAAI,CAAC,EAAE;MAC3D;IACF;IACAH,SAAS,CAACQ,OAAO,GAAGJ,MAAM;IAC1BL,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAE;MAAEI,IAAI;MAAEC,IAAI;MAAET;IAAK,CAAC,CAAC,CAAC;EACtD,CAAC;EACD,MAAMe,sBAAsB,GAAIC,SAAS,IAAK;IAC5CX,aAAa,CAACD,UAAU,CAACa,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACT,IAAI,KAAKO,SAAS,CAACP,IAAI,CAAC,CAAC;EACxE,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,WAAW;MAAC,IAAI,EAAET;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3B,QAAC,MAAM;MAAC,gBAAgB,EAAEO,oBAAqB;MAAC,IAAI,EAAEJ;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAC9D,QAAC,eAAe;MACd,SAAS,EAAEG,SAAU;MACrB,UAAU,EAAEF,UAAW;MACvB,kBAAkB,EAAEW;IAAuB;MAAA;MAAA;MAAA;IAAA,QAC3C;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA5BQhB,UAAU;EAAA,QACsBL,SAAS,EAC/BC,OAAO;AAAA;AAAA,KAFjBI,UAAU;AA8BnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}