{"ast":null,"code":"var _jsxFileName = \"/Users/goktugkoyun/Desktop/Projects/fetch/src/routes/RepositoriesSearchRoute.js\",\n  _s = $RefreshSig$();\nimport { useSearchParams } from 'react-router-dom';\nimport useRepositories from '../hooks/useRepositories';\nimport RepositoriesListItem from '../components/repositories/RepositoriesListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RepositoriesSearchRoute() {\n  _s();\n  const [params] = useSearchParams();\n  const {\n    data: repositories,\n    isLoading,\n    error\n  } = useRepositories(params.get('q'));\n  if (isLoading) {\n    return 'Loading...';\n  } else if (error) {\n    return error.message;\n  }\n  const renderedRepositories = repositories.map(r => {\n    return /*#__PURE__*/_jsxDEV(RepositoriesListItem, {\n      repository: r\n    }, r.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: renderedRepositories\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_s(RepositoriesSearchRoute, \"eu04/PQ+wfrb6YFr/bCboEz9ztQ=\", false, function () {\n  return [useSearchParams, useRepositories];\n});\n_c = RepositoriesSearchRoute;\nexport default RepositoriesSearchRoute;\nvar _c;\n$RefreshReg$(_c, \"RepositoriesSearchRoute\");","map":{"version":3,"names":["useSearchParams","useRepositories","RepositoriesListItem","RepositoriesSearchRoute","params","data","repositories","isLoading","error","get","message","renderedRepositories","map","r","id"],"sources":["/Users/goktugkoyun/Desktop/Projects/fetch/src/routes/RepositoriesSearchRoute.js"],"sourcesContent":["import { useSearchParams } from 'react-router-dom';\nimport useRepositories from '../hooks/useRepositories';\nimport RepositoriesListItem from '../components/repositories/RepositoriesListItem';\n\nfunction RepositoriesSearchRoute() {\n  const [params] = useSearchParams();\n  const {\n    data: repositories,\n    isLoading,\n    error,\n  } = useRepositories(params.get('q'));\n\n  if (isLoading) {\n    return 'Loading...';\n  } else if (error) {\n    return error.message;\n  }\n\n  const renderedRepositories = repositories.map((r) => {\n    return <RepositoriesListItem key={r.id} repository={r} />;\n  });\n\n  return <div className=\"container mx-auto\">{renderedRepositories}</div>;\n}\n\nexport default RepositoriesSearchRoute;\n"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,eAAe,MAAM,0BAA0B;AACtD,OAAOC,oBAAoB,MAAM,iDAAiD;AAAC;AAEnF,SAASC,uBAAuB,GAAG;EAAA;EACjC,MAAM,CAACC,MAAM,CAAC,GAAGJ,eAAe,EAAE;EAClC,MAAM;IACJK,IAAI,EAAEC,YAAY;IAClBC,SAAS;IACTC;EACF,CAAC,GAAGP,eAAe,CAACG,MAAM,CAACK,GAAG,CAAC,GAAG,CAAC,CAAC;EAEpC,IAAIF,SAAS,EAAE;IACb,OAAO,YAAY;EACrB,CAAC,MAAM,IAAIC,KAAK,EAAE;IAChB,OAAOA,KAAK,CAACE,OAAO;EACtB;EAEA,MAAMC,oBAAoB,GAAGL,YAAY,CAACM,GAAG,CAAEC,CAAC,IAAK;IACnD,oBAAO,QAAC,oBAAoB;MAAY,UAAU,EAAEA;IAAE,GAApBA,CAAC,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAAmB;EAC3D,CAAC,CAAC;EAEF,oBAAO;IAAK,SAAS,EAAC,mBAAmB;IAAA,UAAEH;EAAoB;IAAA;IAAA;IAAA;EAAA,QAAO;AACxE;AAAC,GAnBQR,uBAAuB;EAAA,QACbH,eAAe,EAK5BC,eAAe;AAAA;AAAA,KANZE,uBAAuB;AAqBhC,eAAeA,uBAAuB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}